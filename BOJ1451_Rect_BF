#include <iostream>
#include <vector>
#include <cmath>
#include <algorithm>
#include <cstring>
#include <climits>
#include <stack>
#include <string>
#include <utility>

using namespace std;

int Go[101][101];

long long Square(int sx, int sy, int ex, int ey){
    
    int sum = 0;
    for(int i=sx; i<=ex; i++){
        for(int j=sy; j<=ey; j++){
            sum += Go[i][j];
        }
    }
    return sum;
}

void solve(){
    int n, m;
    cin >> n >> m;
    
    for(int i=0; i<n; i++){
        for(int j=0; j<m; j++){
            scanf("%1d" , &Go[i][j]);
        }
    }
    
    long long Max = 0;
    
    
    for(int i=0; i< n-2; i++){ // CASE 1
        for(int j=i+1; j<n-1; j++){
            long long f = Square(0,0,i,m-1);
            long long s = Square(i+1,0,j,m-1);
            long long t = Square(j+1, 0, n-1, m-1);
            Max = max(Max, f*s*t);
        }
    }
    
    for(int i=0; i<m-2; i++){ // CASE 2
        for(int j=i+1; j<m-1; j++){
            long long f = Square(0, 0, n-1, i);
            long long s = Square(0, i+1, n-1, j);
            long long t = Square(0, j+1, n-1, m-1);
            Max = max(Max, f*s*t);
        }
    }
    
    for(int i=0; i<n-1; i++){ // CASE 3
        for(int j=0; j<m-1; j++){
            long long f = Square(0, 0, i, j);
            long long s = Square(i+1, 0, n-1, j);
            long long t = Square(0, j+1, n-1, m-1);
            Max = max(Max, f*s*t);
        }
    }
    
    for(int i=0; i<m-1; i++){ // CASE 4
        for(int j=0; j<n-1; j++){
            long long f = Square(0, 0, n-1, i);
            long long s = Square(0, i+1, j, m-1);
            long long t = Square(j+1, i+1, n-1, m-1);
            Max = max(Max, f*s*t);
        }
    }
    
    for(int i=0; i<n-1; i++){ // CASE 5
        for(int j=0; j<m-1; j++){
            long long f = Square(0, 0, i, m-1);
            long long s = Square(i+1, 0, n-1, j);
            long long t = Square(i+1, j+1, n-1, m-1);
            Max = max(Max, f*s*t);
        }
    }
    
    for(int i=0; i<n-1; i++){ // CASE 6
        for(int j=0; j<m-1; j++){
            long long f = Square(0, 0, i, j);
            long long s = Square(0, j+1, i, m-1);
            long long t = Square(i+1, 0, n-1, m-1);
            Max = max(Max, f*s*t);
        }
    }
    
    cout << Max;
}

int main(){
   
    
    solve();
    return 0;
}

