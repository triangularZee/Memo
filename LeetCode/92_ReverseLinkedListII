# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseBetween(self, head: Optional[ListNode], left: int, right: int) -> Optional[ListNode]:
        if left == right:
            return head
        
        p = node = ListNode(None)
        node.next = head
        
        for _ in range(left-1):
            p = p.next
        damn = None
        tail = p.next
        for _ in range(right-left):
            temp = p.next
            p.next = tail.next
            tail.next = tail.next.next
            p.next.next = temp 
        return node.next
