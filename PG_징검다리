#include <string>
#include <vector>
#include <queue>
#include <algorithm>

using namespace std;

int solution(int distance, vector<int> rocks, int n) {
    int answer = 0;
    
    sort(rocks.begin(), rocks.end()); // 바위 위치 정렬
    rocks.push_back(distance);
    
    int left = 0, right = distance;
    while(left<=right){
        int cnt = 0, prev_pos = 0;
        int mid = (left+right)/2;
        
        for(int i=0; i<rocks.size(); i++){
            if(rocks[i]-prev_pos < mid){ 
                cnt++; // 1번에서 mid 이하라고 해도 2번까지 합쳤을때까지도 mid 이하가 되는지 확인을 위해서 prev_pos 업데이트 안함.
            }
            else{
                prev_pos = rocks[i];    
            }
        }
        
        if(cnt > n){
            right = mid -1;
        }
        else { // <= 이부분 왜??
            answer = max(answer, mid);
            left = mid + 1;
        }
    }
    

    return answer;
}
