#include <iostream>
#include <vector>
#define MAX 100

using namespace std;

vector<int> arr;
bool check[MAX] = {0,};

void show(){
  for(int i=0; i<MAX; i++){
    if(check[i]){
      cout << arr[i] << ' ';
    }
  }
  cout << '\n';
}

void DFS(int idx, int cnt){

  if(cnt == n) {// n = 뽑는 갯수
    show();
    return;
   }
   
   for(int i = idx; i < MAX; i++){ // i가 idx을 시점을 삼는 것이 조합
    if(check[i]){ // 중복 불가
      continue;
    }
    check[i] = true;
    DFS(i, cnt+1);
    check[i] = false;
    }
}


#include <iostream>
#include <vector>
#define MAX 5;

using namespace std;
vector<int> arr;


void DFS(int idx, int cnt, string str){
    if(cnt == 2){
        cout << str << endl;
        return;
    }
    for(int i = idx+1; i< 5; i++){
        DFS(i,cnt+1, str+ (char)(arr[i]+'0'));
    }
}

int main(){
    arr.push_back(0);
    arr.push_back(1);
    arr.push_back(2);
    arr.push_back(3);
    arr.push_back(4);
    
    DFS(-1,0,""); //새로운 조합 방법
    return 0;
}

