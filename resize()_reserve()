Def) capacity : the number of elements that the container has currently allocated space for.
Def) size     : the number of elements in the container.

shrink_to_fit() ; fit capacity to size




int main(){ // 선언&초기화 
vector a(5); 
for(int i=0; i<5; i++){
a.push_back(1); cout << a[i] << ' '; }
} 

----> << 0, 0, 0, 0, 0 >>

int main(){ // resize 
vector a;
a.resize(5);
for(int i=0; i<5; i++){ 
a.push_back(1); 
cout << a[i] << ' '; } 
}

----> << 0, 0, 0, 0, 0 >>

int main(){ // reserve
vector a; a.reserve(5);
for(int i=0; i<5; i++){
a.push_back(1); 
cout << a[i] << ' '; }
}

----> << 1, 1, 1, 1, 1 >>

int main(){ vector a;
a.resize(5); 
for(int i=0; i<5; i++){
a[i] = 1; 
cout << a[i] << ' '; 
} 
cout << endl << a.size() << endl << a.capacity(); 
}

----> << 1, 1, 1, 1, 1, 5, 5 >>

int main(){ .reserve() && indexing  --------- 아주 설명하기 어려운 케이스. 조금 더 알아보길 요망.
vector a; 
a.reserve(5); 
for(int i=0; i<5; i++){ 
a[i] = 1; cout << a[i] << ' ';
}
cout << endl << a.size() << endl << a.capacity(); 
}

----> << 1, 1, 1, 1, 1, 0, 5 >>

int main(){ // .reserve() && push_back.() 
vector a; 
a.reserve(5);
for(int i=0; i<5; i++){
a.push_back(1); cout << a[i] << ' ';
} 
cout << endl << a.size() << endl << a.capacity();
}

----> << 1, 1, 1, 1, 1, 5, 5 >>

int main(){ // .resize() & .push_back() 
vector a;
a.resize(5); 
for(int i=0; i<5; i++){ 
a.push_back(1); cout << a[i] << ' ';
} 
cout << endl << a.size() << endl << a.capacity();
}

----> << 0, 0, 0, 0, 0, 10, 10 >>




int main(){ // .reserve() && push_back.() beyond the number allocated
    vector<int> a;
    a.reserve(5);
    for(int i=0; i<6; i++){
        a.push_back(1);
        cout << a[i] << ' ';
    }
    cout << endl << a.size() << endl << a.capacity();
}


----> << 1, 1, 1, 1, 1, 6, 10 >>


